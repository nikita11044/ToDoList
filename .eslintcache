[{"D:\\projects\\todolist-14\\src\\index.tsx":"1","D:\\projects\\todolist-14\\src\\reportWebVitals.ts":"2","D:\\projects\\todolist-14\\src\\app\\App.tsx":"3","D:\\projects\\todolist-14\\src\\app\\store.ts":"4","D:\\projects\\todolist-14\\src\\app\\app-reducer.ts":"5","D:\\projects\\todolist-14\\src\\features\\TodolistsList\\todolists-reducer.ts":"6","D:\\projects\\todolist-14\\src\\features\\TodolistsList\\tasks-reducer.ts":"7","D:\\projects\\todolist-14\\src\\features\\TodolistsList\\TodolistsList.tsx":"8","D:\\projects\\todolist-14\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"9","D:\\projects\\todolist-14\\src\\utils\\error-utils.ts":"10","D:\\projects\\todolist-14\\src\\api\\todolists-api.ts":"11","D:\\projects\\todolist-14\\src\\components\\AddItemForm\\AddItemForm.tsx":"12","D:\\projects\\todolist-14\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"13","D:\\projects\\todolist-14\\src\\components\\EditableSpan\\EditableSpan.tsx":"14","D:\\projects\\todolist-14\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"15","D:\\projects\\todolist-14\\src\\features\\Login\\auth-reducer.ts":"16","D:\\projects\\todolist-14\\src\\features\\Login\\Login.tsx":"17"},{"size":751,"mtime":1619639800101,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1607869388000,"results":"20","hashOfConfig":"19"},{"size":2596,"mtime":1619645677159,"results":"21","hashOfConfig":"22"},{"size":1182,"mtime":1619639720522,"results":"23","hashOfConfig":"22"},{"size":3106,"mtime":1620240778855,"results":"24","hashOfConfig":"19"},{"size":6810,"mtime":1620244375468,"results":"25","hashOfConfig":"19"},{"size":7443,"mtime":1620244710352,"results":"26","hashOfConfig":"19"},{"size":4043,"mtime":1620241123296,"results":"27","hashOfConfig":"19"},{"size":1101,"mtime":1620076929532,"results":"28","hashOfConfig":"19"},{"size":715,"mtime":1620077640589,"results":"29","hashOfConfig":"19"},{"size":3202,"mtime":1619645677147,"results":"30","hashOfConfig":"22"},{"size":1595,"mtime":1596715562000,"results":"31","hashOfConfig":"22"},{"size":4193,"mtime":1596715250000,"results":"32","hashOfConfig":"22"},{"size":952,"mtime":1594154724000,"results":"33","hashOfConfig":"19"},{"size":1773,"mtime":1596295538000,"results":"34","hashOfConfig":"19"},{"size":3129,"mtime":1620167500255,"results":"35","hashOfConfig":"19"},{"size":3414,"mtime":1619641488814,"results":"36","hashOfConfig":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1qz8l3t",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"fvyus9",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"76"},"D:\\projects\\todolist-14\\src\\index.tsx",[],["77","78"],"D:\\projects\\todolist-14\\src\\reportWebVitals.ts",[],"D:\\projects\\todolist-14\\src\\app\\App.tsx",["79"],"import React, {useEffect} from 'react'\r\nimport './App.css'\r\nimport {\r\n    AppBar,\r\n    Button,\r\n    CircularProgress,\r\n    Container,\r\n    IconButton,\r\n    LinearProgress,\r\n    Toolbar,\r\n    Typography\r\n} from '@material-ui/core'\r\nimport {Menu} from '@material-ui/icons'\r\nimport {TodolistsList} from '../features/TodolistsList/TodolistsList'\r\nimport {ErrorSnackbar} from '../components/ErrorSnackbar/ErrorSnackbar'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from './store'\r\nimport {initializeAppTC, RequestStatusType} from './app-reducer'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Login} from \"../features/Login/Login\";\r\nimport {logoutTC} from \"../features/Login/auth-reducer\";\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nfunction App({demo = false}: PropsType) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC())\r\n    }, [])\r\n\r\n    const status = useSelector<AppRootStateType, RequestStatusType>((state) => state.app.status)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>((state) => state.auth.isLoggedIn)\r\n    const isInitialized = useSelector<AppRootStateType, boolean>((state) => state.app.isInitialized)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    if (!isInitialized) {\r\n        return <div\r\n            style={{position: 'fixed', top: '30%', textAlign: 'center', width: '100%'}}>\r\n            <CircularProgress/>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <ErrorSnackbar />\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        News\r\n                    </Typography>\r\n                    {isLoggedIn && <Button color=\"inherit\" onClick={logoutHandler}>Logout</Button>}\r\n                </Toolbar>\r\n             { status === 'loading' &&  <LinearProgress /> }\r\n            </AppBar>\r\n            <Container fixed>\r\n                <Switch>\r\n                    <Route exact path={'/'} render={() => <TodolistsList demo={demo}/>}/>\r\n                    <Route path={'/login'} render={() => <Login/>}/>\r\n                    <Route path={'/404'} render={() => <h1>404. Page not found</h1>}/>\r\n                    <Redirect from={'*'} to={'/404'}/>\r\n                </Switch>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","D:\\projects\\todolist-14\\src\\app\\store.ts",[],["80","81"],"D:\\projects\\todolist-14\\src\\app\\app-reducer.ts",[],"D:\\projects\\todolist-14\\src\\features\\TodolistsList\\todolists-reducer.ts",[],"D:\\projects\\todolist-14\\src\\features\\TodolistsList\\tasks-reducer.ts",["82","83","84","85","86"],"D:\\projects\\todolist-14\\src\\features\\TodolistsList\\TodolistsList.tsx",["87","88","89","90","91","92","93","94"],"D:\\projects\\todolist-14\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"D:\\projects\\todolist-14\\src\\utils\\error-utils.ts",[],"D:\\projects\\todolist-14\\src\\api\\todolists-api.ts",[],"D:\\projects\\todolist-14\\src\\components\\AddItemForm\\AddItemForm.tsx",["95","96","97"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const AddItemForm = React.memo(function({addItem, disabled = false}: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItemHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItemHandler();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   disabled={disabled}\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItemHandler} disabled={disabled}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","D:\\projects\\todolist-14\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["98","99","100","101","102","103"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === 'loading'}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","D:\\projects\\todolist-14\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"D:\\projects\\todolist-14\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["104","105","106"],"D:\\projects\\todolist-14\\src\\features\\Login\\auth-reducer.ts",[],"D:\\projects\\todolist-14\\src\\features\\Login\\Login.tsx",["107"],"import React from 'react'\r\nimport {Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button, Grid} from '@material-ui/core'\r\nimport {useFormik} from \"formik\";\r\nimport {loginTC} from \"./auth-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required'\r\n            } else if (values.password.length < 3) {\r\n                errors.password = 'Invalid password'\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            console.log(values)\r\n            dispatch(loginTC(values))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/'}/>\r\n    }\r\n\r\n    return <Grid container justify=\"center\">\r\n        <Grid item xs={4}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}>here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        {formik.touched.email && formik.errors.email && <div>{formik.errors.email}</div>}\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n                        {formik.touched.password && formik.errors.password && <div>{formik.errors.password}</div>}\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox {...formik.getFieldProps('rememberMe')}/>}\r\n                        />\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </Grid>\r\n    </Grid>\r\n}\r\n",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":33,"column":8,"nodeType":"114","endLine":33,"endColumn":10,"suggestions":"115"},{"ruleId":"108","replacedBy":"116"},{"ruleId":"110","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":3,"column":5,"nodeType":"120","messageId":"121","endLine":3,"endColumn":26},{"ruleId":"118","severity":1,"message":"122","line":4,"column":5,"nodeType":"120","messageId":"121","endLine":4,"endColumn":29},{"ruleId":"118","severity":1,"message":"123","line":5,"column":5,"nodeType":"120","messageId":"121","endLine":5,"endColumn":27},{"ruleId":"118","severity":1,"message":"124","line":18,"column":5,"nodeType":"120","messageId":"121","endLine":18,"endColumn":26},{"ruleId":"118","severity":1,"message":"125","line":20,"column":5,"nodeType":"120","messageId":"121","endLine":20,"endColumn":27},{"ruleId":"112","severity":1,"message":"126","line":36,"column":8,"nodeType":"114","endLine":36,"endColumn":10,"suggestions":"127"},{"ruleId":"112","severity":1,"message":"128","line":41,"column":8,"nodeType":"114","endLine":41,"endColumn":10,"suggestions":"129"},{"ruleId":"112","severity":1,"message":"128","line":46,"column":8,"nodeType":"114","endLine":46,"endColumn":10,"suggestions":"130"},{"ruleId":"112","severity":1,"message":"128","line":51,"column":8,"nodeType":"114","endLine":51,"endColumn":10,"suggestions":"131"},{"ruleId":"112","severity":1,"message":"128","line":56,"column":8,"nodeType":"114","endLine":56,"endColumn":10,"suggestions":"132"},{"ruleId":"112","severity":1,"message":"128","line":61,"column":8,"nodeType":"114","endLine":61,"endColumn":10,"suggestions":"133"},{"ruleId":"112","severity":1,"message":"128","line":66,"column":8,"nodeType":"114","endLine":66,"endColumn":10,"suggestions":"134"},{"ruleId":"112","severity":1,"message":"128","line":71,"column":8,"nodeType":"114","endLine":71,"endColumn":10,"suggestions":"135"},{"ruleId":"118","severity":1,"message":"136","line":2,"column":9,"nodeType":"120","messageId":"121","endLine":2,"endColumn":12},{"ruleId":"118","severity":1,"message":"137","line":2,"column":14,"nodeType":"120","messageId":"121","endLine":2,"endColumn":20},{"ruleId":"118","severity":1,"message":"138","line":2,"column":22,"nodeType":"120","messageId":"121","endLine":2,"endColumn":33},{"ruleId":"112","severity":1,"message":"139","line":35,"column":8,"nodeType":"114","endLine":35,"endColumn":10,"suggestions":"140"},{"ruleId":"112","severity":1,"message":"141","line":39,"column":8,"nodeType":"114","endLine":39,"endColumn":42,"suggestions":"142"},{"ruleId":"112","severity":1,"message":"141","line":46,"column":8,"nodeType":"114","endLine":46,"endColumn":54,"suggestions":"143"},{"ruleId":"112","severity":1,"message":"141","line":48,"column":95,"nodeType":"114","endLine":48,"endColumn":134,"suggestions":"144"},{"ruleId":"112","severity":1,"message":"141","line":49,"column":101,"nodeType":"114","endLine":49,"endColumn":140,"suggestions":"145"},{"ruleId":"112","severity":1,"message":"141","line":50,"column":107,"nodeType":"114","endLine":50,"endColumn":146,"suggestions":"146"},{"ruleId":"112","severity":1,"message":"141","line":15,"column":97,"nodeType":"114","endLine":15,"endColumn":130,"suggestions":"147"},{"ruleId":"112","severity":1,"message":"141","line":20,"column":8,"nodeType":"114","endLine":20,"endColumn":41,"suggestions":"148"},{"ruleId":"112","severity":1,"message":"141","line":24,"column":8,"nodeType":"114","endLine":24,"endColumn":41,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":57,"column":29,"nodeType":"152","messageId":"153","endLine":58,"endColumn":50,"fix":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["157"],["155"],["156"],"@typescript-eslint/no-unused-vars","'AddTodolistActionType' is defined but never used.","Identifier","unusedVar","'RemoveTodolistActionType' is defined but never used.","'SetTodolistsActionType' is defined but never used.","'SetAppErrorActionType' is defined but never used.","'SetAppStatusActionType' is defined but never used.","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["158"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["159"],["160"],["161"],["162"],["163"],["164"],["165"],"'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["166"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["167"],["168"],["169"],["170"],["171"],["172"],["173"],["174"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"175","text":"176"},"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"177","fix":"181"},{"desc":"177","fix":"182"},{"desc":"177","fix":"183"},{"desc":"177","fix":"184"},{"desc":"177","fix":"185"},{"desc":"177","fix":"186"},{"desc":"177","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"190","fix":"192"},{"desc":"190","fix":"193"},{"desc":"190","fix":"194"},{"desc":"190","fix":"195"},{"desc":"190","fix":"196"},{"desc":"190","fix":"197"},{"desc":"190","fix":"198"},[1956,1956]," rel=\"noreferrer\"","Update the dependencies array to be: [dispatch]",{"range":"199","text":"200"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"201","text":"202"},{"range":"203","text":"200"},{"range":"204","text":"200"},{"range":"205","text":"200"},{"range":"206","text":"200"},{"range":"207","text":"200"},{"range":"208","text":"200"},{"range":"209","text":"200"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"210","text":"211"},"Update the dependencies array to be: [props]",{"range":"212","text":"213"},{"range":"214","text":"213"},{"range":"215","text":"213"},{"range":"216","text":"213"},{"range":"217","text":"213"},{"range":"218","text":"213"},{"range":"219","text":"213"},{"range":"220","text":"213"},[939,941],"[dispatch]",[1326,1328],"[demo, dispatch, isLoggedIn]",[1497,1499],[1668,1670],[1873,1875],[2086,2088],[2301,2303],[2448,2450],[2627,2629],[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],"[props]",[1846,1892],[1991,2030],[2133,2172],[2281,2320],[765,798],[1071,1104],[1261,1294]]