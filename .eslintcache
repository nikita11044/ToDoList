[{"D:\\projects\\todolist-13\\src\\state\\tasks-reducer.ts":"1","D:\\projects\\todolist-13\\src\\Task.tsx":"2","D:\\projects\\todolist-13\\src\\App.tsx":"3","D:\\projects\\todolist-13\\src\\stories\\todolists-api.stories.tsx":"4","D:\\projects\\todolist-13\\src\\index.tsx":"5","D:\\projects\\todolist-13\\src\\api\\todolist-api.ts":"6","D:\\projects\\todolist-13\\src\\stories\\tasks-api.stories.tsx":"7","D:\\projects\\todolist-13\\src\\api\\tasks-api.ts":"8","D:\\projects\\todolist-13\\src\\EditableSpan.tsx":"9","D:\\projects\\todolist-13\\src\\AddItemForm.tsx":"10","D:\\projects\\todolist-13\\src\\stories\\AppWithRedux.stories.tsx":"11","D:\\projects\\todolist-13\\src\\stories\\Header.stories.tsx":"12","D:\\projects\\todolist-13\\src\\stories\\assets\\Task.stories.tsx":"13","D:\\projects\\todolist-13\\src\\Todolist.tsx":"14","D:\\projects\\todolist-13\\src\\stories\\ReduxStoreProviderDecorator.stories.tsx":"15","D:\\projects\\todolist-13\\src\\stories\\Page.tsx":"16"},{"size":3577,"mtime":1611420546000,"results":"17","hashOfConfig":"18"},{"size":1610,"mtime":1617313409624,"results":"19","hashOfConfig":"18"},{"size":4777,"mtime":1617291330511,"results":"20","hashOfConfig":"18"},{"size":1543,"mtime":1617387189969,"results":"21","hashOfConfig":"18"},{"size":641,"mtime":1611420546000,"results":"22","hashOfConfig":"18"},{"size":1041,"mtime":1617303726352,"results":"23","hashOfConfig":"18"},{"size":1962,"mtime":1617389120998,"results":"24","hashOfConfig":"18"},{"size":1430,"mtime":1617389447193,"results":"25","hashOfConfig":"18"},{"size":959,"mtime":1617313649008,"results":"26","hashOfConfig":"18"},{"size":1481,"mtime":1617313391057,"results":"27","hashOfConfig":"18"},{"size":735,"mtime":1616608866582,"results":"28","hashOfConfig":"18"},{"size":510,"mtime":499162500000,"results":"29","hashOfConfig":"18"},{"size":970,"mtime":1617313596916,"results":"30","hashOfConfig":"18"},{"size":3487,"mtime":1611420546000,"results":"31","hashOfConfig":"18"},{"size":1169,"mtime":1616609376812,"results":"32","hashOfConfig":"18"},{"size":2415,"mtime":499162500000,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"vpdnze",{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\todolist-13\\src\\state\\tasks-reducer.ts",["72"],"import {TaskType} from '../Todolist';\r\nimport {v1} from 'uuid';\r\nimport {AddTodolistActionType, RemoveTodolistActionType} from './todolists-reducer';\r\nimport {TasksStateType} from '../App';\r\n\r\nexport type RemoveTaskActionType = {\r\n    type: 'REMOVE-TASK',\r\n    todolistId: string\r\n    taskId: string\r\n}\r\n\r\nexport type AddTaskActionType = {\r\n    type: 'ADD-TASK',\r\n    todolistId: string\r\n    title: string\r\n}\r\n\r\nexport type ChangeTaskStatusActionType = {\r\n    type: 'CHANGE-TASK-STATUS',\r\n    todolistId: string\r\n    taskId: string\r\n    isDone: boolean\r\n}\r\n\r\nexport type ChangeTaskTitleActionType = {\r\n    type: 'CHANGE-TASK-TITLE',\r\n    todolistId: string\r\n    taskId: string\r\n    title: string\r\n}\r\n\r\ntype ActionsType = RemoveTaskActionType | AddTaskActionType\r\n    | ChangeTaskStatusActionType\r\n    | ChangeTaskTitleActionType\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n\r\nconst initialState: TasksStateType = {}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK': {\r\n            const stateCopy = {...state}\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = tasks.filter(t => t.id != action.taskId);\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'ADD-TASK': {\r\n            const stateCopy = {...state}\r\n            const newTask: TaskType = {\r\n                id: v1(),\r\n                title: action.title,\r\n                isDone: false\r\n            }\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = [newTask, ...tasks];\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'CHANGE-TASK-STATUS': {\r\n            let todolistTasks = state[action.todolistId];\r\n            let newTasksArray = todolistTasks\r\n                .map(t => t.id === action.taskId ? {...t, isDone: action.isDone} : t);\r\n\r\n            state[action.todolistId] = newTasksArray;\r\n            return ({...state});\r\n        }\r\n        case 'CHANGE-TASK-TITLE': {\r\n            let todolistTasks = state[action.todolistId];\r\n            // найдём нужную таску:\r\n            let newTasksArray = todolistTasks\r\n                .map(t => t.id === action.taskId ? {...t, title: action.title} : t);\r\n\r\n            state[action.todolistId] = newTasksArray;\r\n            return ({...state});\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: []\r\n            }\r\n        }\r\n        case 'REMOVE-TODOLIST': {\r\n            const copyState = {...state};\r\n            delete copyState[action.id];\r\n            return copyState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const removeTaskAC = (taskId: string, todolistId: string): RemoveTaskActionType => {\r\n    return {type: 'REMOVE-TASK', taskId: taskId, todolistId: todolistId}\r\n}\r\nexport const addTaskAC = (title: string, todolistId: string): AddTaskActionType => {\r\n    return {type: 'ADD-TASK', title, todolistId}\r\n}\r\nexport const changeTaskStatusAC = (taskId: string, isDone: boolean, todolistId: string): ChangeTaskStatusActionType => {\r\n    return {type: 'CHANGE-TASK-STATUS', isDone, todolistId, taskId}\r\n}\r\nexport const changeTaskTitleAC = (taskId: string, title: string, todolistId: string): ChangeTaskTitleActionType => {\r\n    return {type: 'CHANGE-TASK-TITLE', title, todolistId, taskId}\r\n}\r\n\r\n","D:\\projects\\todolist-13\\src\\Task.tsx",["73","74","75"],"D:\\projects\\todolist-13\\src\\App.tsx",["76","77","78","79","80","81","82","83","84","85","86","87","88"],"D:\\projects\\todolist-13\\src\\stories\\todolists-api.stories.tsx",["89","90"],"D:\\projects\\todolist-13\\src\\index.tsx",[],"D:\\projects\\todolist-13\\src\\api\\todolist-api.ts",[],["91","92"],"D:\\projects\\todolist-13\\src\\stories\\tasks-api.stories.tsx",["93","94","95"],"D:\\projects\\todolist-13\\src\\api\\tasks-api.ts",[],"D:\\projects\\todolist-13\\src\\EditableSpan.tsx",[],"D:\\projects\\todolist-13\\src\\AddItemForm.tsx",["96","97","98"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\nexport type AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = React.memo(function(props: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n",["99","100"],"D:\\projects\\todolist-13\\src\\stories\\AppWithRedux.stories.tsx",["101","102","103"],"import React from 'react';\r\nimport { Story, Meta } from '@storybook/react/types-6-0';\r\nimport {action} from \"@storybook/addon-actions\";\r\nimport AppWithRedux from \"../AppWithRedux\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"../state/store\";\r\nimport {ReduxStoreProviderDecorator} from \"./ReduxStoreProviderDecorator.stories\";\r\n\r\n\r\nexport default {\r\n    title: 'TODOLIST/AppWithRedux',\r\n    component: AppWithRedux,\r\n    decorators: [ReduxStoreProviderDecorator],\r\n    argTypes: {\r\n        value: {\r\n            defaultValue: 'React'\r\n        }\r\n    }\r\n} as Meta;\r\n\r\nconst Template: Story = (args) => <AppWithRedux {...args} />;\r\n\r\nexport const AppWithReduxStories = Template.bind({})\r\nAppWithReduxStories.args = {\r\n\r\n}","D:\\projects\\todolist-13\\src\\stories\\Header.stories.tsx",[],"D:\\projects\\todolist-13\\src\\stories\\assets\\Task.stories.tsx",[],"D:\\projects\\todolist-13\\src\\Todolist.tsx",["104","105","106","107","108"],"import React, {useCallback} from 'react'\r\nimport {AddItemForm} from './AddItemForm'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task'\r\nimport {FilterValuesType} from './App';\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n\r\n}\r\n\r\nexport const Todolist = React.memo(function (props: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id)\r\n    }, [props.addTask, props.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.id, title)\r\n    }, [props.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.id), [props.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.id), [props.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.id), [props.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === false)\r\n    }\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === true)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.id}\r\n                                          removeTask={props.removeTask}\r\n                                          changeTaskTitle={props.changeTaskTitle}\r\n                                          changeTaskStatus={props.changeTaskStatus}\r\n                    />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","D:\\projects\\todolist-13\\src\\stories\\ReduxStoreProviderDecorator.stories.tsx",["109","110","111"],"D:\\projects\\todolist-13\\src\\stories\\Page.tsx",[],{"ruleId":"112","severity":1,"message":"113","line":45,"column":53,"nodeType":"114","messageId":"115","endLine":45,"endColumn":55},{"ruleId":"116","severity":1,"message":"117","line":15,"column":97,"nodeType":"118","endLine":15,"endColumn":130,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"117","line":20,"column":8,"nodeType":"118","endLine":20,"endColumn":41,"suggestions":"120"},{"ruleId":"116","severity":1,"message":"117","line":24,"column":8,"nodeType":"118","endLine":24,"endColumn":41,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":1,"column":29,"nodeType":"124","messageId":"125","endLine":1,"endColumn":39},{"ruleId":"122","severity":1,"message":"126","line":1,"column":41,"nodeType":"124","messageId":"125","endLine":1,"endColumn":49},{"ruleId":"122","severity":1,"message":"127","line":13,"column":5,"nodeType":"124","messageId":"125","endLine":13,"endColumn":21},{"ruleId":"122","severity":1,"message":"128","line":15,"column":73,"nodeType":"124","messageId":"125","endLine":15,"endColumn":85},{"ruleId":"122","severity":1,"message":"129","line":32,"column":9,"nodeType":"124","messageId":"125","endLine":32,"endColumn":20},{"ruleId":"122","severity":1,"message":"130","line":33,"column":9,"nodeType":"124","messageId":"125","endLine":33,"endColumn":20},{"ruleId":"116","severity":1,"message":"131","line":42,"column":8,"nodeType":"118","endLine":42,"endColumn":10,"suggestions":"132"},{"ruleId":"116","severity":1,"message":"131","line":47,"column":8,"nodeType":"118","endLine":47,"endColumn":10,"suggestions":"133"},{"ruleId":"116","severity":1,"message":"131","line":52,"column":8,"nodeType":"118","endLine":52,"endColumn":10,"suggestions":"134"},{"ruleId":"116","severity":1,"message":"131","line":57,"column":8,"nodeType":"118","endLine":57,"endColumn":10,"suggestions":"135"},{"ruleId":"116","severity":1,"message":"131","line":62,"column":8,"nodeType":"118","endLine":62,"endColumn":10,"suggestions":"136"},{"ruleId":"116","severity":1,"message":"131","line":67,"column":8,"nodeType":"118","endLine":67,"endColumn":10,"suggestions":"137"},{"ruleId":"116","severity":1,"message":"131","line":72,"column":8,"nodeType":"118","endLine":72,"endColumn":10,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":4,"column":1,"nodeType":"141","endLine":6,"endColumn":2},{"ruleId":"122","severity":1,"message":"142","line":8,"column":7,"nodeType":"124","messageId":"125","endLine":8,"endColumn":15},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"122","severity":1,"message":"147","line":2,"column":9,"nodeType":"124","messageId":"125","endLine":2,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":5,"column":1,"nodeType":"141","endLine":7,"endColumn":2},{"ruleId":"122","severity":1,"message":"142","line":9,"column":7,"nodeType":"124","messageId":"125","endLine":9,"endColumn":15},{"ruleId":"122","severity":1,"message":"148","line":2,"column":9,"nodeType":"124","messageId":"125","endLine":2,"endColumn":12},{"ruleId":"122","severity":1,"message":"149","line":2,"column":14,"nodeType":"124","messageId":"125","endLine":2,"endColumn":20},{"ruleId":"122","severity":1,"message":"150","line":2,"column":22,"nodeType":"124","messageId":"125","endLine":2,"endColumn":33},{"ruleId":"143","replacedBy":"151"},{"ruleId":"145","replacedBy":"152"},{"ruleId":"122","severity":1,"message":"153","line":3,"column":9,"nodeType":"124","messageId":"125","endLine":3,"endColumn":15},{"ruleId":"122","severity":1,"message":"154","line":5,"column":9,"nodeType":"124","messageId":"125","endLine":5,"endColumn":17},{"ruleId":"122","severity":1,"message":"155","line":6,"column":9,"nodeType":"124","messageId":"125","endLine":6,"endColumn":14},{"ruleId":"116","severity":1,"message":"117","line":35,"column":8,"nodeType":"118","endLine":35,"endColumn":33,"suggestions":"156"},{"ruleId":"116","severity":1,"message":"117","line":42,"column":8,"nodeType":"118","endLine":42,"endColumn":45,"suggestions":"157"},{"ruleId":"116","severity":1,"message":"117","line":44,"column":86,"nodeType":"118","endLine":44,"endColumn":116,"suggestions":"158"},{"ruleId":"116","severity":1,"message":"117","line":45,"column":92,"nodeType":"118","endLine":45,"endColumn":122,"suggestions":"159"},{"ruleId":"116","severity":1,"message":"117","line":46,"column":98,"nodeType":"118","endLine":46,"endColumn":128,"suggestions":"160"},{"ruleId":"122","severity":1,"message":"155","line":2,"column":27,"nodeType":"124","messageId":"125","endLine":2,"endColumn":32},{"ruleId":"161","severity":1,"message":"162","line":20,"column":9,"nodeType":"163","messageId":"164","endLine":23,"endColumn":10,"fix":"165"},{"ruleId":"161","severity":1,"message":"166","line":24,"column":9,"nodeType":"163","messageId":"164","endLine":27,"endColumn":10,"fix":"167"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["168"],["169"],["170"],"@typescript-eslint/no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'todolistsReducer' is defined but never used.","'tasksReducer' is defined but never used.","'todolistId1' is assigned a value but never used.","'todolistId2' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["171"],["172"],["173"],["174"],["175"],["176"],["177"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'settings' is assigned a value but never used.","no-native-reassign",["178"],"no-negated-in-lhs",["179"],"'todoListsAPI' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.",["178"],["179"],"'action' is defined but never used.","'Provider' is defined but never used.","'store' is defined but never used.",["180"],["181"],["182"],["183"],["184"],"no-useless-computed-key","Unnecessarily computed property [\"todolistId1\"] found.","Property","unnecessarilyComputedProperty",{"range":"185","text":"186"},"Unnecessarily computed property [\"todolistId2\"] found.",{"range":"187","text":"188"},{"desc":"189","fix":"190"},{"desc":"189","fix":"191"},{"desc":"189","fix":"192"},{"desc":"193","fix":"194"},{"desc":"193","fix":"195"},{"desc":"193","fix":"196"},{"desc":"193","fix":"197"},{"desc":"193","fix":"198"},{"desc":"193","fix":"199"},{"desc":"193","fix":"200"},"no-global-assign","no-unsafe-negation",{"desc":"189","fix":"201"},{"desc":"189","fix":"202"},{"desc":"189","fix":"203"},{"desc":"189","fix":"204"},{"desc":"189","fix":"205"},[639,654],"\"todolistId1\"",[788,803],"\"todolistId2\"","Update the dependencies array to be: [props]",{"range":"206","text":"207"},{"range":"208","text":"207"},{"range":"209","text":"207"},"Update the dependencies array to be: [dispatch]",{"range":"210","text":"211"},{"range":"212","text":"211"},{"range":"213","text":"211"},{"range":"214","text":"211"},{"range":"215","text":"211"},{"range":"216","text":"211"},{"range":"217","text":"211"},{"range":"218","text":"207"},{"range":"219","text":"207"},{"range":"220","text":"207"},{"range":"221","text":"207"},{"range":"222","text":"207"},[700,733],"[props]",[962,995],[1152,1185],[1456,1458],"[dispatch]",[1632,1634],[1841,1843],[2055,2057],[2259,2261],[2411,2413],[2595,2597],[1177,1202],[1415,1452],[1542,1572],[1666,1696],[1796,1826]]